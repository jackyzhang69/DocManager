#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocMgr
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Document")]
	public partial class DocDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblDocument(tblDocument instance);
    partial void UpdatetblDocument(tblDocument instance);
    partial void DeletetblDocument(tblDocument instance);
    partial void InserttblSubDocument(tblSubDocument instance);
    partial void UpdatetblSubDocument(tblSubDocument instance);
    partial void DeletetblSubDocument(tblSubDocument instance);
    partial void InserttblDocTrack(tblDocTrack instance);
    partial void UpdatetblDocTrack(tblDocTrack instance);
    partial void DeletetblDocTrack(tblDocTrack instance);
    #endregion
		
		public DocDataContext() : 
				base(global::DocMgr.Properties.Settings.Default.DocumentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DocDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblDocument> tblDocuments
		{
			get
			{
				return this.GetTable<tblDocument>();
			}
		}
		
		public System.Data.Linq.Table<tblSubDocument> tblSubDocuments
		{
			get
			{
				return this.GetTable<tblSubDocument>();
			}
		}
		
		public System.Data.Linq.Table<tblDocTrack> tblDocTracks
		{
			get
			{
				return this.GetTable<tblDocTrack>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocument")]
	public partial class tblDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ApplicationId;
		
		private string _DocCategory;
		
		private string _DocNumber;
		
		private string _DocName;
		
		private string _DocFormat;
		
		private string _DocOwner;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicationIdChanging(System.Nullable<int> value);
    partial void OnApplicationIdChanged();
    partial void OnDocCategoryChanging(string value);
    partial void OnDocCategoryChanged();
    partial void OnDocNumberChanging(string value);
    partial void OnDocNumberChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnDocFormatChanging(string value);
    partial void OnDocFormatChanged();
    partial void OnDocOwnerChanging(string value);
    partial void OnDocOwnerChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public tblDocument()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int")]
		public System.Nullable<int> ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocCategory", DbType="NVarChar(30)")]
		public string DocCategory
		{
			get
			{
				return this._DocCategory;
			}
			set
			{
				if ((this._DocCategory != value))
				{
					this.OnDocCategoryChanging(value);
					this.SendPropertyChanging();
					this._DocCategory = value;
					this.SendPropertyChanged("DocCategory");
					this.OnDocCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNumber", DbType="NVarChar(50)")]
		public string DocNumber
		{
			get
			{
				return this._DocNumber;
			}
			set
			{
				if ((this._DocNumber != value))
				{
					this.OnDocNumberChanging(value);
					this.SendPropertyChanging();
					this._DocNumber = value;
					this.SendPropertyChanged("DocNumber");
					this.OnDocNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="NVarChar(200)")]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocFormat", DbType="NVarChar(50)")]
		public string DocFormat
		{
			get
			{
				return this._DocFormat;
			}
			set
			{
				if ((this._DocFormat != value))
				{
					this.OnDocFormatChanging(value);
					this.SendPropertyChanging();
					this._DocFormat = value;
					this.SendPropertyChanged("DocFormat");
					this.OnDocFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocOwner", DbType="NVarChar(50)")]
		public string DocOwner
		{
			get
			{
				return this._DocOwner;
			}
			set
			{
				if ((this._DocOwner != value))
				{
					this.OnDocOwnerChanging(value);
					this.SendPropertyChanging();
					this._DocOwner = value;
					this.SendPropertyChanged("DocOwner");
					this.OnDocOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSubDocument")]
	public partial class tblSubDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _DocumentId;
		
		private string _DocName;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDocumentIdChanging(System.Nullable<int> value);
    partial void OnDocumentIdChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public tblSubDocument()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentId", DbType="Int")]
		public System.Nullable<int> DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="NVarChar(200)")]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDocTrack")]
	public partial class tblDocTrack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ApplicationId;
		
		private System.Nullable<int> _DocumentId;
		
		private System.Nullable<int> _SubDocumentId;
		
		private System.Nullable<System.DateTime> _RequstDate;
		
		private System.Nullable<System.DateTime> _ReceivedDate;
		
		private string _Issues;
		
		private string _DocStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicationIdChanging(System.Nullable<int> value);
    partial void OnApplicationIdChanged();
    partial void OnDocumentIdChanging(System.Nullable<int> value);
    partial void OnDocumentIdChanged();
    partial void OnSubDocumentIdChanging(System.Nullable<int> value);
    partial void OnSubDocumentIdChanged();
    partial void OnRequstDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequstDateChanged();
    partial void OnReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedDateChanged();
    partial void OnIssuesChanging(string value);
    partial void OnIssuesChanged();
    partial void OnDocStatusChanging(string value);
    partial void OnDocStatusChanged();
    #endregion
		
		public tblDocTrack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int")]
		public System.Nullable<int> ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentId", DbType="Int")]
		public System.Nullable<int> DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDocumentId", DbType="Int")]
		public System.Nullable<int> SubDocumentId
		{
			get
			{
				return this._SubDocumentId;
			}
			set
			{
				if ((this._SubDocumentId != value))
				{
					this.OnSubDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._SubDocumentId = value;
					this.SendPropertyChanged("SubDocumentId");
					this.OnSubDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequstDate", DbType="Date")]
		public System.Nullable<System.DateTime> RequstDate
		{
			get
			{
				return this._RequstDate;
			}
			set
			{
				if ((this._RequstDate != value))
				{
					this.OnRequstDateChanging(value);
					this.SendPropertyChanging();
					this._RequstDate = value;
					this.SendPropertyChanged("RequstDate");
					this.OnRequstDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this.OnReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivedDate = value;
					this.SendPropertyChanged("ReceivedDate");
					this.OnReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issues", DbType="NVarChar(500)")]
		public string Issues
		{
			get
			{
				return this._Issues;
			}
			set
			{
				if ((this._Issues != value))
				{
					this.OnIssuesChanging(value);
					this.SendPropertyChanging();
					this._Issues = value;
					this.SendPropertyChanged("Issues");
					this.OnIssuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocStatus", DbType="NVarChar(50)")]
		public string DocStatus
		{
			get
			{
				return this._DocStatus;
			}
			set
			{
				if ((this._DocStatus != value))
				{
					this.OnDocStatusChanging(value);
					this.SendPropertyChanging();
					this._DocStatus = value;
					this.SendPropertyChanged("DocStatus");
					this.OnDocStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
